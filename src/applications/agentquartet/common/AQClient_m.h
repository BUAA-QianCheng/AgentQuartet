//
// Generated file, do not edit! Created by nedtool 5.6 from apps/agentquartet/common/AQClient.msg.
//

#ifndef __INET_AQCLIENT_M_H
#define __INET_AQCLIENT_M_H

#if defined(__clang__)
#  pragma clang diagnostic ignored "-Wreserved-id-macro"
#endif
#include <omnetpp.h>

// nedtool version check
#define MSGC_VERSION 0x0506
#if (MSGC_VERSION!=OMNETPP_VERSION)
#    error Version mismatch! Probably this file was generated by an earlier version of nedtool: 'make clean' should help.
#endif


namespace inet {

class ClientRegister;
} // namespace inet

#include "inet/common/INETDefs_m.h" // import inet.common.INETDefs

#include "inet/common/packet/chunk/Chunk_m.h" // import inet.common.packet.chunk.Chunk


namespace inet {

/**
 * Class generated from <tt>apps/agentquartet/common/AQClient.msg:21</tt> by nedtool.
 * <pre>
 * class ClientRegister extends FieldsChunk
 * {
 *     string cuid;
 * }
 * </pre>
 */
class ClientRegister : public ::inet::FieldsChunk
{
  protected:
    omnetpp::opp_string cuid;

  private:
    void copy(const ClientRegister& other);

  protected:
    // protected and unimplemented operator==(), to prevent accidental usage
    bool operator==(const ClientRegister&);

  public:
    ClientRegister();
    ClientRegister(const ClientRegister& other);
    virtual ~ClientRegister();
    ClientRegister& operator=(const ClientRegister& other);
    virtual ClientRegister *dup() const override {return new ClientRegister(*this);}
    virtual void parsimPack(omnetpp::cCommBuffer *b) const override;
    virtual void parsimUnpack(omnetpp::cCommBuffer *b) override;

    // field getter/setter methods
    virtual const char * getCuid() const;
    virtual void setCuid(const char * cuid);
};

inline void doParsimPacking(omnetpp::cCommBuffer *b, const ClientRegister& obj) {obj.parsimPack(b);}
inline void doParsimUnpacking(omnetpp::cCommBuffer *b, ClientRegister& obj) {obj.parsimUnpack(b);}

} // namespace inet

#endif // ifndef __INET_AQCLIENT_M_H

